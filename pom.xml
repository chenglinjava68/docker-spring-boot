<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.chenglin</groupId>
	<artifactId>docker-spring-boot</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0</version>
	<name>docker-spring-boot</name>
	<description>Getting started with Spring Boot and Docker</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
	</parent>


	<properties>
		<java.version>1.8</java.version>
		<docker.image.prefix>archives</docker.image.prefix>
		<docker.registry>172.16.32.81</docker.registry>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
            <version>5.1.31</version>
		</dependency>
	</dependencies>

	<!-- Package as an executable JAR -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<!--如果package时不想用docker打包,就注释掉这个goal
                            <goal>build</goal>
                            <goal>push</goal>-->
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 上下文路径配置，此处设置为项目根路径 用来读取Dockerfile-->
					<contextDirectory>${project.basedir}</contextDirectory>
					<!-- Dockerfile目录指定 -->
					<dockerfile>src/main/docker/Dockerfile</dockerfile>
					<!--使用Maven的setting.xml来配置账号密码-->
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<!--上传路径/镜像构建名： Harbor地址/Harbor项目名/springboot项目名-->
					<repository>${docker.registry}/${docker.image.prefix}/${project.artifactId}</repository>
					<!-- 标签,最终会显示在Harbor镜像的标签中 -->
					<tag>${project.version}</tag>
					<!-- 作为Dockerfile 文件传入,也就是Dockerfile 中 ARG JAR_FILE的值-->
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>